{
	"info": {
		"_postman_id": "26002931-7fd3-49f5-b32f-6ac86ce8a884",
		"name": "wechapay-api3-upload-image",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "图片上传",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "46a80020-fcd5-451c-b558-592f0ee157d5",
						"exec": [
							"const private_key = `-----BEGIN PRIVATE KEY-----",
							"-----END PRIVATE KEY-----`;",
							"",
							"const mchid = \"\";",
							"const serialNo = \"\";",
							"",
							"let sdk = require('postman-collection');",
							"",
							"// request data does not resolve variables which makes sign-error",
							"// see https://github.com/postmanlabs/postman-app-support/issues/3322",
							"function replaceVariables(templateString) {",
							"    let tokens = _.uniq(templateString.match(/{{\\w*}}/g))",
							"    ",
							"    _.forEach(tokens, t => {",
							"       let variable = t.replace(/[{}]/g, '') ",
							"       let value = environment[variable] || globals[variable]",
							"       templateString = templateString.replace(new RegExp(t,'g'), value)",
							"    });",
							"    ",
							"    return templateString",
							"}",
							"",
							"var newUrl = new sdk.Url(replaceVariables(request.url));",
							"",
							"var now = Date.now();",
							"var timeStamp = Math.round(now / 1000);",
							"var nonceStr = now;",
							"",
							"var method = request.method;",
							"",
							"var data = \"\";",
							"if (method == 'POST' || method == 'PUT' || method == 'PATCH') {",
							"    var data = pm.request.body.raw; ",
							"}",
							"",
							"var canonicalUrl = newUrl.getPathWithQuery();",
							"",
							"var message = method + \"\\n\"",
							"+ canonicalUrl + \"\\n\"",
							"+ timeStamp + \"\\n\"",
							"+ nonceStr + \"\\n\"",
							"+ '{\"filename\": \"IMG_1116.jpeg\", \"sha256\": \"3f7fc73465d4f8b34c6f6e84e2945d4767d2afaaf642f9d78eec997cb4b98e52\"}' + \"\\n\";",
							"",
							"pm.sendRequest(\"https://wx.gtimg.com/pay/js/apiv3/libs/node-forge@0.7.6/forge.min.js\", function (err, res) {",
							"        if (err) {",
							"            console.log(err);}",
							"        else {",
							"            eval(res.text());",
							"            ",
							"            var privateKey = forge.pki.privateKeyFromPem(private_key);",
							"            var sha256 = forge.md.sha256.create();",
							"            sha256.update(forge.util.encodeUtf8(message));",
							"            var signature = forge.util.encode64(privateKey.sign(sha256));",
							"            ",
							"            console.log(`message=[${message}]`);",
							"            ",
							"            var auth = `WECHATPAY2-SHA256-RSA2048 mchid=\"${mchid}\",serial_no=\"${serialNo}\",nonce_str=\"${nonceStr}\",timestamp=\"${timeStamp}\",signature=\"${signature}\"`;",
							"            pm.environment.set(\"auth\", auth);",
							"        ",
							"        }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/Users/linjiabin/Downloads/IMG_1116.jpeg"
						},
						{
							"key": "meta",
							"value": "{\"filename\": \"IMG_1116.jpeg\", \"sha256\": \"3f7fc73465d4f8b34c6f6e84e2945d4767d2afaaf642f9d78eec997cb4b98e52\"}",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.mch.weixin.qq.com/v3/merchant/media/upload",
					"protocol": "https",
					"host": [
						"api",
						"mch",
						"weixin",
						"qq",
						"com"
					],
					"path": [
						"v3",
						"merchant",
						"media",
						"upload"
					]
				},
				"description": "1"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}